>>enumerate in python is used generates pairs of index and digit  for example, for num_str = ['2', '7', '3', '6'], it produces:

(0, '2'), (1, '7'), (2, '3'), (3, '6')


>> combinations function from Python's itertools library. The combinations function allows you to generate all possible combinations (subsets) of a given size from an array. 
For example, for an array nums = [3, 1], combinations(nums, 1) generates [3], [1], and combinations(nums, 2) generates [3, 1].

>>We use Pythonâ€™s all() function to check if all values are True.
ex: all(sub_expr)  // val are stroed in sub_expr

>>We use Pythonâ€™s any() function to check if at least one value is True.
ex : any(sub_expr)

>> in python we dont require to incrememnt i in loop as it increments itself by default (forward traversal)
now if we want to traversal backward we can use start: stop :step   ,  ex -->  Option 1: Using range() for Reverse Traversal
You can use range() with a negative step to go through the sequence in reverse:

python code:
 
for i in range(len(s) - 1, -1, -1):
    # Access each character s[i] from the end to the beginning


>>> hum .split() use kar sakte for convert : "apple,banana,orange"  ---> words = ['apple', 'banana', 'orange']

>>>words[i][-1]  yeh hum tab use karte hai jab : hum words ke every item ke har ek letter ko  use kare tab
